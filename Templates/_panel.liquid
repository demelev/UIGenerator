using UnityEngine;
using UnityEngine.UI;
using System.Collections;
using System.Collections.Generic;
using System;

namespace {{config.ProjectNamespace}}
{
    public class {{panel.ClassName}} : PanelBase
    {
    #region Public events
        {% for event in panel.PublicEvents %}
            {{event.ToString()}}
        {% endfor %}
    #endregion


    #region Private serializable variables
        {% for element in panel.elements %}
            {% if element.type == "Button" %}
        [SerializeField]
        Button _{{ element.name }}Button;
            {%endif%}
        {% endfor %}
    #endregion


    #region Public methods and properties

    #endregion


#region {{panel.ClassName}} methods

        {% for element in panel.elements -%}
        {% if element.type == "Button" %}
        void {{ element.name | capitalize }}ButtonClicked()
        {
        }
        {%endif%}
        {% endfor -%}

#endregion

#region Monobehavior methods

        void Awake()
        {
            {% for element in panel.elements -%}
            {% if element.type == "Button" %}
            _{{ element.name}}Button.onClick.AddListener({{ element.name | capitalize }}ButtonClicked);
            {%endif%}
            {% endfor -%}
        }

        void OnEnable()
        {
        }

        void OnDisable()
        {
        }
#endregion
    }
}
